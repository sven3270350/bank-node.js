{
  "swagger": "2.0",
  "info": {
    "description": "This is the API documentation for Full Stack Web Application \"Bank Application\". Please use the links below if you want more information.",
    "version": "1.0.0",
    "title": "Bank Application",
    "contact": {
      "email": "contact@pietrzakadrian.com"
    },
    "license": {
      "name": "Live Preview",
      "url": "https://bank.pietrzakadrian.com/"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "bills",
      "description": "Operations about bill"
    },
    {
      "name": "transactions",
      "description": "Operations about transaction"
    },
    {
      "name": "currency",
      "description": "Operations about currency"
    },
    {
      "name": "additionals",
      "description": "Operations about additional"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "basicAuth": {
      "type": "basic"
    }
  },
  "schemes": ["https", "http"],
  "paths": {
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "summary": "Returns basic User's Data",
        "description": "",
        "operationId": "getUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["users"],
        "summary": "Update basic User's Data",
        "description": "",
        "operationId": "updateUserId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "update basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/register": {
      "post": {
        "tags": ["users"],
        "summary": "Register User",
        "description": "",
        "operationId": "register",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "summary": "Login User",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/users/logout/{userId}": {
      "put": {
        "tags": ["users"],
        "summary": "Log out User",
        "description": "",
        "operationId": "logout",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/isLogin/{userLogin}": {
      "get": {
        "tags": ["users"],
        "summary": "Checking if the User's login already exists",
        "description": "",
        "operationId": "isLogin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userLogin",
            "in": "path",
            "description": "Checking if the User's login already exists",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ]
      }
    },
    "/users/isEmail/{userEmail}": {
      "get": {
        "tags": ["users"],
        "summary": "Checking if the User's email already exists",
        "description": "",
        "operationId": "userEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userEmail",
            "in": "path",
            "description": "Checking if the User's login already exists",
            "required": true,
            "type": "string",
            "maximum": 10,
            "minimum": 1
          }
        ]
      }
    },
    "/users/setCurrency/{userId}": {
      "put": {
        "tags": ["users"],
        "summary": "Update User's currency",
        "description": "",
        "operationId": "setCurrencyUser",
        "consumes": ["application/xml"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "update User's Currency",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/transactions/confirm": {
      "post": {
        "tags": ["transactions"],
        "summary": "Confirm a new Transactions",
        "description": "",
        "operationId": "transactionsConfirm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "confirms a new Transactions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/transactions/register": {
      "post": {
        "tags": ["transactions"],
        "summary": "Register a new Transactions",
        "description": "",
        "operationId": "transactionsRegister",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register a new Transactions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/transactions/getTransactions": {
      "post": {
        "tags": ["transactions"],
        "summary": "Returns User's transactions",
        "description": "",
        "operationId": "getTransactions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Returns User's transactions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/transactions/recipient/{recipientId}": {
      "get": {
        "tags": ["transactions"],
        "summary": "Returns Recipient's Transaction",
        "description": "",
        "operationId": "registerRecipientId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "description": "return Recipient's Transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/transactions/sender/{senderId}": {
      "get": {
        "tags": ["transactions"],
        "summary": "Returns Sender's transaction",
        "description": "",
        "operationId": "senderSenderId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "senderId",
            "in": "path",
            "description": "Return Sender's transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },

    "/transactions/authorizationKey": {
      "post": {
        "tags": ["transactions"],
        "summary": "Returns Recipient's Transaction Authorization Key",
        "description": "",
        "operationId": "registerCodeRecipientId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Returns Recipient's Transaction Authorization Key",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },

    "/bills/{userId}": {
      "get": {
        "tags": ["bills"],
        "summary": "Returns User's Bill Data",
        "description": "",
        "operationId": "billsConfirm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "return Recipient's Transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/bills/search/{accountBill}": {
      "get": {
        "tags": ["bills"],
        "summary": "Returns All User's Bill Data for search",
        "description": "",
        "operationId": "searchbills",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountBill",
            "in": "path",
            "description": "return Recipient's Transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/bills/isAccountBill/{accountBill}": {
      "get": {
        "tags": ["bills"],
        "summary": "Checking if the Bill already exists",
        "description": "",
        "operationId": "isAccountBill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountBill",
            "in": "path",
            "description": "return Recipient's Transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/bills/isAmountMoney/{accountBill}": {
      "post": {
        "tags": ["bills"],
        "summary": "Checking if the User has a sufficient amount of money",
        "description": "",
        "operationId": "isAmountMoney",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountBill",
            "in": "path",
            "description": "return Recipient's Transaction",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/currency": {
      "get": {
        "tags": ["currency"],
        "summary": "Returns all currencies",
        "description": "",
        "operationId": "getCurrency",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "return basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ]
      },
      "post": {
        "tags": ["currency"],
        "summary": "Sets the new currency rate",
        "description": "",
        "operationId": "setCurrency",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "update basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/additionals/isNotification/{userId}": {
      "get": {
        "tags": ["additionals"],
        "summary": "Checking if the user has a new notification",
        "description": "",
        "operationId": "isNotification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "return basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/additionals/newNotification/": {
      "post": {
        "tags": ["additionals"],
        "summary": "Returns new User's notification",
        "description": "",
        "operationId": "newNotification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "update basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/additionals/unsetNotification/{userId}": {
      "put": {
        "tags": ["additionals"],
        "summary": "Unsets User's notification",
        "description": "",
        "operationId": "unsetNotification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "return basic User's Data",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "login",
        "password",
        "name",
        "surname",
        "email",
        "date_registration"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "date_registration": {
          "type": "string",
          "format": "date-time"
        },
        "last_successful_logged": {
          "type": "string",
          "format": "date-time"
        },
        "last_failed_logged": {
          "type": "string",
          "format": "date-time"
        },
        "last_present_logged": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Bill": {
      "type": "object",
      "required": [
        "id_owner",
        "account_bill",
        "available_funds",
        "id_currency"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_owner": {
          "type": "integer",
          "format": "int64"
        },
        "account_bill": {
          "type": "number",
          "format": "decimal"
        },
        "available_funds": {
          "type": "number",
          "format": "double"
        },
        "id_currency": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "required": [
        "id_sender",
        "id_recipient",
        "date_time",
        "amount_money",
        "id_currency",
        "transfer_title",
        "authorization_key",
        "authorization_status"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_sender": {
          "type": "integer",
          "format": "int64"
        },
        "id_recipient": {
          "type": "integer",
          "format": "int64"
        },
        "date_time": {
          "type": "string",
          "format": "date-time"
        },
        "amount_money": {
          "type": "number",
          "format": "double"
        },
        "id_currency": {
          "type": "integer",
          "format": "int64"
        },
        "transfer_title": {
          "type": "string"
        },
        "authorization_key": {
          "type": "string"
        },
        "authorization_status": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Additional": {
      "type": "object",
      "required": [
        "id_owner",
        "account_balance_history",
        "incoming_transfers_sum",
        "outgoing_transfers_sum",
        "notification_status",
        "notification_count"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_owner": {
          "type": "integer",
          "format": "int64"
        },
        "account_balance_history": {
          "type": "string"
        },
        "incoming_transfers_sum": {
          "type": "number",
          "format": "double"
        },
        "outgoing_transfers_sum": {
          "type": "number",
          "format": "double"
        },
        "notification_status": {
          "type": "boolean",
          "format": "int64",
          "default": 0
        },
        "notification_count": {
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      }
    },
    "Currency": {
      "type": "object",
      "required": [
        "currency",
        "currency_exchange_rate",
        "date_currency_exchange_rate_sync",
        "main_currency"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "currency_exchange_rate": {
          "type": "number",
          "format": "double",
          "default": 1
        },
        "date_currency_exchange_rate_sync": {
          "type": "string",
          "format": "date-time"
        },
        "main_currency": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "externalDocs": {
    "description": "GitHub",
    "url": "https://github.com/pietrzakadrian/bank"
  }
}
